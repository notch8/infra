credentials:
  root:
    user: root
#    password: sakila
    host: "%"
tls:
  useSelfSigned: true

#serverVersion: 8.0.31
serverInstances: 2
routerInstances: 1 # or use router.instances
baseServerId: 1000

logs:
  error:
    enabled: true
    collect: false
  general:
    enabled: true
    collect: false
  slowQuery:
    enabled: true
    longQueryTime: 2.5
#  collector:
#    image: "192.168.20.198:5000/fluentd-es:v1.16"
#    fluentd:
#      forwarding:
#        enabled: false
#        forwarderSpec:
#          podSpec:
#            terminationGracePeriod: 42
#          podAnnotations:
#            forwarderAnnotation1: forwarderAnnotation1Value
#          podLabels:
#            forwarderLabel1: forwarderLabel1Value
#      generalLog:
#        tag: "genLogTag"
##        options:
#      errorLog:
#        tag: "errLogTag"
##        options:
##      slowLog:
#        tag: "slowLogTag"
##        options:
#     recordAugmentation:
#        enabled: false
#        labels:
#        - fieldName: "pod_name"
#          labelName: "statefulset.kubernetes.io/pod-name"
#        annotations:
#        - fieldName: "membership-info"
#          labelName: "mysql.oracle.com/membership-info"
#        staticFields:
#        - fieldName: "static_field_1"
#          fieldValue: "static_field_1_value"
#        resourceFields:
#        - fieldName: "pod_ip"
#          fieldPath: "status.podIP"
#        - fieldName: "host_ip"
#          fieldPath: "status.hostIP"
#      additionalFilterConfiguration: |
#        filterConfigValueLine1
#        filterConfigValueLine1
#      sink:
##       rawConfig:


podSpec:
  containers:
  - name: mysql
    resources:
      requests:
        cpu: '2'
        memory: 16Gi
      limits:
        cpu: '4'
        memory: 24Gi

#podAnnotations:
#podLabels:

serverConfig:
  mycnf: |
    [mysqld]
    bind-address=*
    default_storage_engine=InnoDB
    binlog_format=row
    innodb_autoinc_lock_mode=2
    max_allowed_packet=512M
    symbolic-links=0
    # UTF8
    character-set-server = utf8mb4
    collation-server = utf8mb4_unicode_ci

    [mysqldump]
    max_allowed_packet=512M

datadirVolumeClaimTemplate:
  accessModes: ReadWriteOnce
  resources:
    requests:
      storage: 1Ti

#initDB:
#  dump:
#    name:
#    path:
#    options:
#      includeSchemas:
#    ociObjectStorage:
#      prefix:
#      bucketName:
#      credentials:
#    s3:
#      prefix:
#      config:
#      bucketName:
#      profile:
#      endpoint
#    azure:
#      prefix:
#      config:
#      containerName:
#    persistentVolumeClaim:
#  clone:
#    donorUrl:
#    rootUser:
#    credentials:


backupProfiles:
- name: dump-instance-profile-pvc
  dumpInstance:
    storage:
      persistentVolumeClaim:
        claimName: mysql-tilma-dev-shared-efs

backupSchedules:
- name: schedule-ref
  schedule: "5 1 * * *"
  timeZone: "Europe/Amsterdam"
  deleteBackupData: false
  backupProfileName: dump-instance-profile-pvc
  enabled: true


# If you would like to debug the Helm output with `helm template`, you need
# to turn disableLookups on as during `helm template` Helm won't contact the kube API
# and all lookups will thus fail
disableLookups: false
